##Write a function named 'pollutantmean' that calculates the mean of a pollutant (sulfate or nitrate) across a specified ##list of monitors. The function 'pollutantmean' takes three arguments: 'directory', 'pollutant', and 'id'. Given a ##vector monitor ID numbers, 'pollutantmean' reads that monitors' particulate matter data from the directory specified ##in the 'directory' argument and returns the mean of the pollutant across all of the monitors, ignoring any missing ##values coded as NA. A prototype of the function is as follows
##pollutantmean <- function(directory, pollutant, id = 1:332) {
##        ## 'directory' is a character vector of length 1 indicating
##        ## the location of the CSV files
##
##        ## 'pollutant' is a character vector of length 1 indicating
##        ## the name of the pollutant for which we will calculate the
##        ## mean; either "sulfate" or "nitrate".
##
##        ## 'id' is an integer vector indicating the monitor ID numbers
##        ## to be used
##
##        ## Return the mean of the pollutant across all monitors list
##        ## in the 'id' vector (ignoring NA values)
##}
##You can see some example output from this function. The function that you write should be able to match this output. ##Please save your code to a file named pollutantmean.R.

pollutantmean <- function(directory="specdata",pollutant="sulfate",id = 1:332){
  fileloc=paste("C:/D-Drive/Professional Development/Big Data/Coursera/Data Science Track/Intro to R Programming/Wk 2/",directory,sep="")
  
  setwd(fileloc)
  
  
  dataall<-read.csv("001.csv",nrow=1)
  
  for (i in id){
    filenum<-sprintf("%03d",i)
  
    filename<-paste(filenum,".csv",sep="")
  
    temp_data<-read.csv(filename)
  
    dataall<-rbind(dataall,temp_data)
    rm(temp_data)
  }
  
  datamat<-as.matrix(dataall)
  len<-nrow(datamat)
  datafinal<-datamat[2:len,]
        
  if (pollutant=='nitrate') {
    nitr<-datafinal[,3]
    nitrnumeric<-as.numeric(nitr)
    pollmean<-mean(nitrnumeric,na.rm=TRUE)
    pollmean<-round(pollmean,3)
    print(pollmean)
    } else {
    sulp<-datafinal[,2]
    sulpnumeric<-as.numeric(sulp)
    pollmean<-mean(sulpnumeric,na.rm=TRUE)
    pollmean<-round(pollmean,3)
    print(pollmean)
  }
}
